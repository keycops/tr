import selenium.webdriver as webdriver 
from selenium.webdriver.chrome.options import Options as chromeoption
from selenium.webdriver.common.by import By
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
from selenium.webdriver.common.action_chains import ActionChains
import time
import json,requests
import pickle
import os


def opti(Options) -> chromeoption:
    options =Options
    prefs = {"profile.default_content_setting_values.notifications" : 2,}
    options.add_experimental_option("prefs",prefs)
    options.add_argument("--lang=en")
    options.add_experimental_option('excludeSwitches', ['enable-logging'])
    options.add_argument('--ignore-certificate-errors-spki-list')
    options.add_argument('--ignore-certificate-errors')
    options.add_argument('--ignore-ssl-errors')
    options.add_experimental_option("detach", True)
    options.add_experimental_option("useAutomationExtension", False)
    options.add_experimental_option("excludeSwitches",["enable-automation"])
    options.add_argument('--start-maximized')
    options.add_argument("disable-blink-features")
    options.add_argument('--disable-blink-features=AutomationControlled')
    options.add_argument("--disable-dev-shm-usage")
    options.add_argument('--disable-gpu')
    options.add_argument("--log-level=3")
    options.add_experimental_option('w3c', True)
    options.add_argument("--disable-web-security")
    options.add_argument("--allow-running-insecure-content")
    options.add_argument('--disable-logging')
    options.add_argument("--mute-audio")
    return options


def with_display_show(useragent) -> webdriver :
    # options = webdriver.ChromeOptions()             #◄◄◄◄◄◄◄◄◄◄◄◄◄◄◄◄◄◄◄◄◄◄◄
    options = opti(webdriver.ChromeOptions())
    options.add_argument("--no-sandbox")
    options.add_argument("--disable-dev-shm-usage")
    options.add_argument(f'--user-agent={useragent}')
    options.add_argument("--display=:1") # localhost:1 -> display ID = 1
    driver = webdriver.Chrome(options=options)
    return driver

driver = with_display_show("Mozilla/5.0 (X11; Linux x86_64; rv:122.0) Gecko/20100101 Firefox/122.0")
driver.get('https://profitcentr.com/login')
